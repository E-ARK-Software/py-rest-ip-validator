# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from eark_ip.model.base_model_ import Model
from eark_ip import util


class ManifestSummary(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, file_count: int=0, total_size: int=None):  # noqa: E501
        """ManifestSummary - a model defined in Swagger

        :param file_count: The file_count of this ManifestSummary.  # noqa: E501
        :type file_count: int
        :param total_size: The total_size of this ManifestSummary.  # noqa: E501
        :type total_size: int
        """
        self.swagger_types = {
            'file_count': int,
            'total_size': int
        }

        self.attribute_map = {
            'file_count': 'fileCount',
            'total_size': 'totalSize'
        }
        self._file_count = file_count
        self._total_size = total_size

    @classmethod
    def from_dict(cls, dikt) -> 'ManifestSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The manifestSummary of this ManifestSummary.  # noqa: E501
        :rtype: ManifestSummary
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_count(self) -> int:
        """Gets the file_count of this ManifestSummary.


        :return: The file_count of this ManifestSummary.
        :rtype: int
        """
        return self._file_count

    @file_count.setter
    def file_count(self, file_count: int):
        """Sets the file_count of this ManifestSummary.


        :param file_count: The file_count of this ManifestSummary.
        :type file_count: int
        """

        self._file_count = file_count

    @property
    def total_size(self) -> int:
        """Gets the total_size of this ManifestSummary.


        :return: The total_size of this ManifestSummary.
        :rtype: int
        """
        return self._total_size

    @total_size.setter
    def total_size(self, total_size: int):
        """Sets the total_size of this ManifestSummary.


        :param total_size: The total_size of this ManifestSummary.
        :type total_size: int
        """

        self._total_size = total_size
