# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from eark_ip.model.base_model_ import Model
from eark_ip.model.manifest_entry import ManifestEntry  # noqa: F401,E501
from eark_ip.model.manifest_summary import ManifestSummary  # noqa: F401,E501
from eark_ip import util


class Manifest(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, source: str=None, summary: ManifestSummary=None, entries: List[ManifestEntry]=None):  # noqa: E501
        """Manifest - a model defined in Swagger

        :param source: The source of this Manifest.  # noqa: E501
        :type source: str
        :param summary: The summary of this Manifest.  # noqa: E501
        :type summary: ManifestSummary
        :param entries: The entries of this Manifest.  # noqa: E501
        :type entries: List[ManifestEntry]
        """
        self.swagger_types = {
            'source': str,
            'summary': ManifestSummary,
            'entries': List[ManifestEntry]
        }

        self.attribute_map = {
            'source': 'source',
            'summary': 'summary',
            'entries': 'entries'
        }
        self._source = source
        self._summary = summary
        self._entries = entries

    @classmethod
    def from_dict(cls, dikt) -> 'Manifest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The manifest of this Manifest.  # noqa: E501
        :rtype: Manifest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source(self) -> str:
        """Gets the source of this Manifest.

        Some class to cover different types of manifest source (archive, filesystem, METS)  # noqa: E501

        :return: The source of this Manifest.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source: str):
        """Sets the source of this Manifest.

        Some class to cover different types of manifest source (archive, filesystem, METS)  # noqa: E501

        :param source: The source of this Manifest.
        :type source: str
        """

        self._source = source

    @property
    def summary(self) -> ManifestSummary:
        """Gets the summary of this Manifest.


        :return: The summary of this Manifest.
        :rtype: ManifestSummary
        """
        return self._summary

    @summary.setter
    def summary(self, summary: ManifestSummary):
        """Sets the summary of this Manifest.


        :param summary: The summary of this Manifest.
        :type summary: ManifestSummary
        """

        self._summary = summary

    @property
    def entries(self) -> List[ManifestEntry]:
        """Gets the entries of this Manifest.


        :return: The entries of this Manifest.
        :rtype: List[ManifestEntry]
        """
        return self._entries

    @entries.setter
    def entries(self, entries: List[ManifestEntry]):
        """Sets the entries of this Manifest.


        :param entries: The entries of this Manifest.
        :type entries: List[ManifestEntry]
        """

        self._entries = entries
