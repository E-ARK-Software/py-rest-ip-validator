openapi: 3.0.0
info:
  title: E-ARK IP Validation API
  description: REST API definition for [E-ARK information package validation](https://earkcsip.dilcis.eu/).
  version: 0.1.0
  contact:
    name: Carl Wilson
    email: carl@openpreservation.org
  license:
    name: Apache 2.0
    url : https://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: /ips
    description: Requests for E-ARK information packages
  - name: /ips-manifests
    description: Requests for E-ARK information package mnifest details
  - name: /profiles
    description: Requests for E-ARK IP validation profiles
  - name: /validations
    description: Request for information package validation
paths:
  /ips:
    get:
      tags:
        - /ips
      description: Retrieve a list of package binaries uploaded to the validation service.
      consumes: []
      parameters: []
      produces:
        - application/json;charset=UTF-8
        - application/xml;charset=UTF-8
      responses:
        '200':
          description: A list of package binaries
          content:
            'application/json': {}
            'application/xml': {}
          examples:
            application/json;charset=UTF-8: |-
              [
                {
                    “uid”: “845872bf-cbf8-48e6-b495-ec6b4a63b607”,
                    “name”: “IP.100.XYZ”,
                },
                {
                    “uid”: “845872bf-cbf8-48e6-b495-ec6b4a63b609”,
                    “name”: “IP.101.XYZ”,
                }
              ]
      schema:
        $ref: '#definitions/PackageDetails'
    post:
      tags:
        - /ips
      description: Upload a package binary for validation, returns process identifier and digest.
      consumes:
        - multipart/form-data
      produces:
        - application/json;charset=UTF-8
        - application/xml;charset=UTF-8
      parameters:
        - name: Authorization
          in: header
          description: HTTP Basic Auth header
          required: true
          type: string
        - name: package
          in: formData
          description: Archived package binary
          required: true
          type: file
      responses:
        '201':
          description: Success
          examples:
            application/json;charset=UTF-8: |-
              {
                “uid”: “845872bf-cbf8-48e6-b495-ec6b4a63b607”,
                “name”: “IP.100.XYZ”,
                “checksums”: [
                  {
                    “algorithm”: “sha256”,
                    “value”: “e3b0c44298fc1c149afbf4...”
                  },
                  {
                    “algorithm”: “md5”,
                    “value”: “e3b0c44298fc1c149afbf4...”
                  }
                ]
              }
          schema:
            $ref: '#/definitions/PackageDetails'
        '401':
          description: If no Authorization header has been supplied
        '403':
          description: If the supplied Authorization header does not reference a user with write access.
    delete:
      tags:
        - /ips
      description: Delete all information packages for authorised user.
      consumes: []
      produces:
        - application/json;charset=UTF-8
        - application/xml;charset=UTF-8
      parameters:
        - name: Authorization
          in: header
          description: HTTP Basic Auth header
          required: true
          type: string
     responses:
        '204':
          description: Package binaries successfully deleted.
          schema:
            $ref: '#/definitions/PackageDetails'
        '401':
          description: If no Authorization header has been supplied.
        '403':
          description: If the supplied Authorization header does not reference a user with write access.
